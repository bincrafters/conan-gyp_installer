diff --git a/pylib/gyp/MSVSNew.py b/pylib/gyp/MSVSNew.py
index d0c27d2..e11f499 100644
--- a/pylib/gyp/MSVSNew.py
+++ b/pylib/gyp/MSVSNew.py
@@ -50,7 +50,8 @@ def MakeGuid(name, seed='msvs_new'):
   not change when the project for a target is rebuilt.
   """
   # Calculate a MD5 signature for the seed and name.
-  d = _new_md5(str(seed) + str(name)).hexdigest().upper()
+  name = str(seed) + str(name)
+  d = _new_md5(name.encode()).hexdigest().upper()
   # Convert most of the signature to GUID form (discard the rest)
   guid = ('{' + d[:8] + '-' + d[8:12] + '-' + d[12:16] + '-' + d[16:20]
           + '-' + d[20:32] + '}')
@@ -79,6 +80,9 @@ class MSVSSolutionEntry(object):
   def __ne__(self, other):
     return (self.name, self.get_guid()) != (other.name, other.get_guid())
 
+  def __hash__(self):
+    return hash((self.name, self.get_guid()))
+
 
 class MSVSFolder(MSVSSolutionEntry):
   """Folder in a Visual Studio project or solution."""
diff --git a/pylib/gyp/generator/msvs.py b/pylib/gyp/generator/msvs.py
index 5a32cb5..d9d7f6f 100644
--- a/pylib/gyp/generator/msvs.py
+++ b/pylib/gyp/generator/msvs.py
@@ -2715,7 +2715,7 @@ def _GetMSBuildGlobalProperties(spec, version, guid, gyp_file_name):
 
   platform_name = None
   msvs_windows_sdk_version = None
-  for configuration in spec['configurations'].itervalues():
+  for configuration in spec['configurations'].values():
     platform_name = platform_name or _ConfigPlatform(configuration)
     msvs_windows_sdk_version = (msvs_windows_sdk_version or
                   _ConfigWindowsTargetPlatformVersion(configuration, version))
diff --git a/pylib/gyp/xcodeproj_file.py b/pylib/gyp/xcodeproj_file.py
index 662a8ad..3b1ff3c 100644
--- a/pylib/gyp/xcodeproj_file.py
+++ b/pylib/gyp/xcodeproj_file.py
@@ -142,6 +142,7 @@ import posixpath
 import re
 import struct
 import sys
+import functools
 
 # hashlib is supplied as of Python 2.5 as the replacement interface for sha
 # and other secure hashes.  In 2.6, sha is deprecated.  Import hashlib if
@@ -179,6 +180,9 @@ _escaped = re.compile('[\\\\"]|[\x00-\x1f]')
 # Used by SourceTreeAndPathFromPath
 _path_leading_variable = re.compile(r'^\$\((.*?)\)(/(.*))?$')
 
+def cmp(a, b):
+  return (a>b) - (a<b)
+
 def SourceTreeAndPathFromPath(input_path):
   """Given input_path, returns a tuple with sourceTree and path values.
 
@@ -422,7 +426,7 @@ class XCObject(object):
       """
 
       hash.update(struct.pack('>i', len(data)))
-      hash.update(data)
+      hash.update(data.encode())
 
     if seed_hash is None:
       seed_hash = _new_sha1()
@@ -1409,7 +1413,7 @@ class PBXGroup(XCHierarchicalElement):
 
   def SortGroup(self):
     self._properties['children'] = \
-        sorted(self._properties['children'], cmp=lambda x,y: x.Compare(y))
+        sorted(self._properties['children'], key=functools.cmp_to_key(lambda x,y: x.Compare(y)))
 
     # Recurse.
     for child in self._properties['children']:
@@ -2713,7 +2717,7 @@ class PBXProject(XCContainerPortal):
     # according to their defined order.
     self._properties['mainGroup']._properties['children'] = \
         sorted(self._properties['mainGroup']._properties['children'],
-               cmp=lambda x,y: x.CompareRootGroup(y))
+               key=functools.cmp_to_key(lambda x,y: x.CompareRootGroup(y)))
 
     # Sort everything else by putting group before files, and going
     # alphabetically by name within sections of groups and files.  SortGroup
@@ -2804,9 +2808,9 @@ class PBXProject(XCContainerPortal):
 
       # Xcode seems to sort this list case-insensitively
       self._properties['projectReferences'] = \
-          sorted(self._properties['projectReferences'], cmp=lambda x,y:
+          sorted(self._properties['projectReferences'], key=functools.cmp_to_key(lambda x,y:
                  cmp(x['ProjectRef'].Name().lower(),
-                     y['ProjectRef'].Name().lower()))
+                     y['ProjectRef'].Name().lower())))
     else:
       # The link already exists.  Pull out the relevnt data.
       project_ref_dict = self._other_pbxprojects[other_pbxproject]
@@ -2930,7 +2934,7 @@ class PBXProject(XCContainerPortal):
       product_group = ref_dict['ProductGroup']
       product_group._properties['children'] = sorted(
           product_group._properties['children'],
-          cmp=lambda x, y, rp=remote_products: CompareProducts(x, y, rp))
+          key=functools.cmp_to_key(lambda x, y, rp=remote_products: CompareProducts(x, y, rp)))
 
 
 class XCProjectFile(XCObject):
@@ -2961,8 +2965,8 @@ class XCProjectFile(XCObject):
       self._XCPrint(file, 0, '{ ')
     else:
       self._XCPrint(file, 0, '{\n')
-    for property, value in sorted(self._properties.iteritems(),
-                                  cmp=lambda x, y: cmp(x, y)):
+    for property, value in sorted(self._properties.items(),
+                                  key=functools.cmp_to_key(lambda x, y: cmp(x, y))):
       if property == 'objects':
         self._PrintObjects(file)
       else:
@@ -2989,7 +2993,7 @@ class XCProjectFile(XCObject):
       self._XCPrint(file, 0, '\n')
       self._XCPrint(file, 0, '/* Begin ' + class_name + ' section */\n')
       for object in sorted(objects_by_class[class_name],
-                           cmp=lambda x, y: cmp(x.id, y.id)):
+                           key=functools.cmp_to_key(lambda x, y: cmp(x.id, y.id))):
         object.Print(file)
       self._XCPrint(file, 0, '/* End ' + class_name + ' section */\n')
 
